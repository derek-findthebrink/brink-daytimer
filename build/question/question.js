// Generated by CoffeeScript 1.9.3
var _, async, c, config, exports, fs, moment, parseQuestion, question, tag, updateConfig, writeQuestion;

tag = "question/question:%s =>";

fs = require("fs");

async = require("async");

_ = require("underscore");

moment = require("moment");

config = require("../config");

c = new config();

parseQuestion = function(input, cb) {
  var question;
  question = {
    question: {
      name: input.name,
      type: input.type,
      message: input.question
    },
    filename: c.questionsDir + input.name + ".json",
    dateAdded: moment().format("YYYY-MM-DD"),
    responses: []
  };
  console.log(tag, "question", question);
  return cb(null, question);
};

writeQuestion = function(question, cb) {
  console.log(tag, "input", c.questionsDir);
  c.writeQuestion(question);
  return cb(null, question);
};

updateConfig = function(question, cb) {
  var data, obj;
  data = c.contents;
  obj = {
    name: question.question.name,
    file: question.filename,
    lastResponse: false
  };
  data.questions.push(obj);
  c.writeConfig(data);
  return cb(null, question);
};

question = function(input) {
  return async.waterfall([async.apply(parseQuestion, input), writeQuestion, updateConfig], function(err, res) {
    if (err) {
      throw err;
    }
  });
};

exports = module.exports = question;

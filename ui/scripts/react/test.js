// Generated by CoffeeScript 1.10.0
(function() {
  var SetIntervalMixin, TickTock, TodayItem, TodayList;

  TodayItem = React.createClass({displayName: "TodayItem",
    render: function() {
      var statusText;
      if (this.state.completed) {
        statusText = "complete!";
      } else {
        statusText = "incomplete!";
      }
      return React.createElement("li", {
        "className": "todayItem",
        "onClick": this.handleClick
      }, React.createElement("div", {
        "className": "todayItem-name"
      }, React.createElement("h3", null, this.props.name)), React.createElement("div", {
        "className": "todayItem-question"
      }, React.createElement("p", null, this.props.question)), React.createElement("div", {
        "className": "todayItem-status"
      }, React.createElement("h4", null, "Task is ", statusText)));
    },
    getInitialState: function() {
      return {
        completed: false
      };
    },
    handleClick: function() {
      return this.setState({
        completed: !this.state.completed
      });
    }
  });

  TodayList = React.createClass({displayName: "TodayList",
    render: function() {
      return (React.createElement("h2", null, "Today"), React.createElement("ul", {
        "className": "todayContainer"
      }, React.createElement(TodayItem, {
        "name": "tucker",
        "question": "did you walk him?",
        "completed": false
      }), React.createElement(TodayItem, {
        "name": "tucker",
        "question": "did you feed him brekkers?",
        "completed": false
      }), React.createElement(TodayItem, {
        "name": "tucker",
        "question": "did you feed him dinner?",
        "completed": false
      })));
    }
  });

  React.render(React.createElement(TodayList, null), $("#today")[0]);

  SetIntervalMixin = {
    componentWillMount: function() {
      return this.intervals = [];
    },
    setInterval: function() {
      return this.intervals.push(setInterval.apply(null, arguments));
    },
    componentWillUnmount: function() {
      return this.intervals.map(clearInterval);
    }
  };

  TickTock = React.createClass({displayName: "TickTock",
    mixins: [SetIntervalMixin],
    getInitialState: function() {
      return {
        seconds: 0
      };
    },
    componentDidMount: function() {
      return this.setInterval(this.tick, 1000);
    },
    tick: function() {
      return this.setState({
        seconds: this.state.seconds + 1
      });
    },
    render: function() {
      return React.createElement("p", null, "\t\t\t\tDaytimer has been running for ", this.state.seconds, " seconds.");
    }
  });

  React.render(React.createElement(TickTock, null), $("footer")[0]);

}).call(this);
